@model upd8.MVC.Models.CustomerModel;
@using upd8.MVC.Models;
@{
    ViewData["Title"] = "Cadastro de clientes";
    var msg = TempData["msg"];
}
<div class="container p-3 border rounded-3">
    <div class="mb-3">
        <img class="h-auto" src="https://www.upd8.com.br/content/agency2/images/logo_upd8_stick2.png" style="width: 70px">
    </div>
    @if (msg != null)
    {
        <div class="alert alert-success text-center" role="alert">
            @msg
        </div>
    }
    <div class="p-3 mb-3 border rounded-3">
        <div id="consulta-cliente">
            <h6 class="text-dark">Consulta cliente</h6>
        </div>
        <div>
            <form method="post" asp-controller="Customer" asp-action="Index">
                <div class="row ml-3 mb-3 float-left">
                    <div class="col-2">
                        @Html.LabelFor(m => m.Customer.Cpf)
                        @Html.TextBoxFor(m => m.Customer.Cpf, new { @class = "form-control rounded-3", type = "text" })
                    </div>
                    <div class="col-4">
                        @Html.LabelFor(m => m.Customer.Name)
                        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control rounded-3", type = "text" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(m => m.Customer.BirthDate)
                        @Html.TextBoxFor(m => m.Customer.BirthDate, new { @class = "form-control rounded-3", type = "date" })
                    </div>
                    <div class="col-3 mt-4">
                        @Html.LabelFor(m => m.Customer.Gender, new { @class = "ml-1"})
                        @foreach (var gender in Enum.GetValues(typeof(upd8.Domain.Enums.GenderEnum)))
                        {
                            <label>
                                @Html.RadioButtonFor(m => m.Customer.Gender, (int)gender, new { @class = "form-check-input rounded-3" })
                                @gender
                            </label>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        @Html.LabelFor(m => m.Customer.Adress)
                        @Html.TextBoxFor(m => m.Customer.Adress, new { @class = "form-control rounded-3", type = "text" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(m => m.Customer.State)
                        @Html.DropDownListFor(m => m.Customer.State, new SelectList(Model.Estados, "Id", "Sigla"), "Selecione Estado", new { @class = "form-control rounded-3", id = "estado" })
                    </div>
                    <div class="col-3">
                        @Html.LabelFor(m => m.Customer.City)
                        @Html.DropDownListFor(m => m.Customer.City, new SelectList(Enumerable.Empty<SelectListItem>()), "Selecione Cidade", new { @class = "form-control rounded-3", id = "cidade" })
                    </div>
                    <div class="col-3 row mt-4">
                        <div class="col-6 text-right">
                            <button type="submit" class="btn btn-info border rounded-3 w-100">Pesquisar</button>
                        </div>
                        <div class="col-6 text-right">
                            <button type="reset" class="btn btn-light border rounded-3 w-100">Limpar</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="p-3 mb-3 border rounded-3">
        <div id="consulta-cliente">
            <h6 class="text-dark">Resultado da pesquisa</h6>
        </div>
        <div class="text-center">
            <table class="table table-bordered">
                <thead>
                    <tr class="bg-light">
                        <th scope="col" class="col-1"></th>
                        <th scope="col" class="col-1"></th>
                        <th scope="col">Cliente</th>
                        <th scope="col">CPF</th>
                        <th scope="col">Data Nasc.</th>
                        <th scope="col">Estado</th>
                        <th scope="col">Cidade</th>
                        <th scope="col">Sexo</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.Customers != null)
                        {
                            Estado estado = new();
                            foreach (var customer in Model.Customers)
                            {
                                <tr>
                                    <td><a class="btn btn-info" asp-action="Edit" asp-route-id="@customer.Id">Editar </a></td>
                                    <td><button class="btn btn-danger border">Excluir</button></td>
                                    <td>@customer.Name</td>
                                    <td>@customer.Cpf</td>
                                    <td>@customer.BirthDate?.ToString("dd/MM/yyyy")</td>
                                    <td>@Model.Estados.FirstOrDefault(x => x.Id.ToString() == customer.State).Sigla</td>
                                    <td>@customer.City</td>
                                    <td>@customer.Gender</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>  
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $('#estado').change(function () {
            var estadoId = $(this).val();

            $.ajax({
                url: '/Customer/ObterCidadesPorEstado',
                type: 'GET',
                data: { estadoId: estadoId },
                success: function (cidades) {
                    var cidadeSelect = $('#cidade');
                    cidadeSelect.empty(); 
                    cidadeSelect.append($('<option>', { 
                        value: '',
                        text: 'Selecione Cidade'
                    }));
                    $.each(cidades, function (index, cidade) { 
                        console.log(cidade.nome)
                        cidadeSelect.append($('<option>', {
                            value: cidade.id,
                            text: cidade.nome
                        }));
                    });
                },
                error: function () {
                    alert('Erro ao carregar cidades');
                }
            });
        });
    });
</script>
